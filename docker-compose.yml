version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tech-interview-postgres
    environment:
      POSTGRES_DB: tech_interview_platform
      POSTGRES_USER: tech_user
      POSTGRES_PASSWORD: tech_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tech_user -d tech_interview_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tech-interview-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tech-interview-backend
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgresql://tech_user:tech_password@postgres:5432/tech_interview_platform
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-jwt-secret-key
      NODE_ENV: development
      PORT: 3001
      CORS_ORIGINS: http://localhost:3000,http://localhost:3002
      LOG_LEVEL: debug
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data: